from datetime import datetime, timedelta

class LibraryItem:
    def __init__(self, title, author, category, item_type):
        self.title = title
        self.author = author
        self.category = category
        self.item_type = item_type
        self.is_checked_out = False
        self.due_date = None

    def check_out(self, days=14):
        if not self.is_checked_out:
            self.is_checked_out = True
            self.due_date = datetime.now() + timedelta(days=days)
            return True
        return False

    def return_item(self):
        if self.is_checked_out:
            self.is_checked_out = False
            overdue_days = (datetime.now() - self.due_date).days
            fine = max(0, overdue_days * 0.50)
            self.due_date = None
            return fine
        return 0

class Library:
    def __init__(self):
        self.items = []

    def add_item(self, item):
        self.items.append(item)

    def search_items(self, **kwargs):
        results = self.items
        if 'title' in kwargs:
            results = [item for item in results if kwargs['title'].lower() in item.title.lower()]
        if 'author' in kwargs:
            results = [item for item in results if kwargs['author'].lower() in item.author.lower()]
        if 'category' in kwargs:
            results = [item for item in results if kwargs['category'].lower() in item.category.lower()]
        return results

    def list_items(self):
        for item in self.items:
            status = "Checked out" if item.is_checked_out else "Available"
            print(f"{item.item_type}: {item.title} by {item.author} ({item.category}) - {status}")

def main():
    library = Library()
    
    while True:
        print("\nOptions:")
        print("1. Add new item")
        print("2. Check out item")
        print("3. Return item")
        print("4. Search items")
        print("5. List all items")
        print("6. Exit")
        choice = input("Enter your choice: ")
        
        if choice == '1':
            title = input("Enter title: ")
            author = input("Enter author: ")
            category = input("Enter category: ")
            item_type = input("Enter item type (Book/Magazine/DVD): ")
            item = LibraryItem(title, author, category, item_type)
            library.add_item(item)
            print("Item added successfully.")
        
        elif choice == '2':
            title = input("Enter title of the item to check out: ")
            items = library.search_items(title=title)
            if items:
                item = items[0]
                if item.check_out():
                    print(f"Checked out {item.title}. Due date: {item.due_date.strftime('%Y-%m-%d')}")
                else:
                    print(f"{item.title} is already checked out.")
            else:
                print("Item not found.")
        
        elif choice == '3':
            title = input("Enter title of the item to return: ")
            items = library.search_items(title=title)
            if items:
                item = items[0]
                fine = item.return_item()
                if fine > 0:
                    print(f"Returned {item.title}. Overdue fine: ${fine:.2f}")
                else:
                    print(f"Returned {item.title}. No overdue fine.")
            else:
                print("Item not found.")
        
        elif choice == '4':
            search_type = input("Search by (title/author/category): ").lower()
            search_value = input(f"Enter {search_type}: ")
            items = library.search_items(**{search_type: search_value})
            if items:
                for item in items:
                    status = "Checked out" if item.is_checked_out else "Available"
                    print(f"{item.item_type}: {item.title} by {item.author} ({item.category}) - {status}")
            else:
                print("No items found.")
        
        elif choice == '5':
            library.list_items()
        
        elif choice == '6':
            break
        
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
